---
layout: page
title:  "nahi sirji"
date:   2018-05-15 23:59:39 +0530
categories: jekyll update
permalink: /:categories/:year/:month/:day/:title.html
---
This is the second post made in my `_posts` directory. I edited and re-built it, and observing the changes as they happen. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for sklvnskn knk sjfh j idea about how it works.
This is the second post made in my `_posts` directory. I edited and re-built it, and observing the changes as they happen. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for sklvnskn knk sjfh j idea about how it works.
This is the second post made in my `_posts` directory. I edited and re-built it, and observing the changes as they happen. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for sklvnskn knk sjfh j idea about how it works.
This is the second post made in my `_posts` directory. I edited and re-built it, and observing the changes as they happen. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for sklvnskn knk sjfh j idea about how it works.
This is the second post made in my `_posts` directory. I edited and re-built it, and observing the changes as they happen. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for sklvnskn knk sjfh j idea about how it works.
This is the second post made in my `_posts` directory. I edited and re-built it, and observing the changes as they happen. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for sklvnskn knk sjfh j idea about how it works.
This is the second post made in my `_posts` directory. I edited and re-built it, and observing the changes as they happen. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for sklvnskn knk sjfh j idea about how it works.
This is the second post made in my `_posts` directory. I edited and re-built it, and observing the changes as they happen. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for sklvnskn knk sjfh j idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight ruby %}
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
{% endhighlight %}

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyllâ€™s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

I'm bored, have links to [my github repo][zubair-gh] too.

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
[zubair-gh]: https://github.com/zubairabid
